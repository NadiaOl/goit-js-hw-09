{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAQgC,SAAvBC,EAAcC,EAAUC,GAEjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACeC,KAAKC,SAAW,GAEtCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAfEO,SAASC,cAAc,SAE/BC,iBAAiB,UAkBD,SAACC,GAGQA,EAAtBC,iBAG8B,MAClCC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAeC,OAAOL,EAAMM,OAChC,MAAMC,EAAcF,OAAOJ,EAAKK,OAC1BE,EAAgBH,OAAOH,EAAOI,OAGT,GAAvBF,EAAe,GAAKG,EAAc,GAAKC,GAAiB,EAC1D,OAAQzB,EAAA0B,OAAOC,QAAQ,8BAI0B,IAA9C,IAAIC,EAAI,EAAGA,GAAKH,EAAeG,GAAK,EAIT1B,EAAhB0B,EAAGP,GACdQ,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA0B,OAAOI,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA0B,OAAOC,QAAQ,sBAAoBxB,QAAiBC,MAAU,IAGvBiB,GAA3BG,EAEhBV,EAAMkB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// получаем доступ к форме и везаем слушателя сабмит\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\n// создаем функцию для создания промиса\nfunction createPromise(position, delay) {\n\nreturn new Promise((resolve, reject) => {\n  setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n});\n}\n\n// создаем функцию сабмита\nfunction handleSubmit(event) {\n\n  // отменяем перезагрузку страницы\n  event.preventDefault();\n\n  // достаем введенные значения из полей формы\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  let enteredDelay = Number(delay.value);\n  const enteredStep = Number(step.value);\n  const enteredAmount = Number(amount.value);\n\n  // запретим выбор значений меньше 0\n  if (enteredDelay < 0 || enteredStep < 0 || enteredAmount <= 0) {\n    return  Notify.failure(`Выберете значение больше 0`)\n  }\n\n  // запускаем цикл до тех пор пока кол-во запусков не станет равно enteredAmount\n  for (let i = 1; i <= enteredAmount; i += 1) {\n\n// при каждом запуске цикла вызываем функцию создания промиса\n// первая итерация с задержкой равной enteredDelay\n    createPromise(i, enteredDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    // увеличиваем задержку для последующих итераций на enteredStep\n    enteredDelay += enteredStep;\n    // обнуляем поля\n    event.target.reset();\n  }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","enteredDelay","Number","value","enteredStep","enteredAmount","Notify","failure","i","then","success","catch","target","reset"],"version":3,"file":"03-promises.745829c7.js.map"}